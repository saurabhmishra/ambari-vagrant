commit 243d2302d272b89c0f6a80919ad995fbc2b73ce1
Author: Dan Tehranian <dan.tehranian@virtualinstruments.com>
Date:   Mon Jul 22 20:37:11 2013 -0400

    Fix private network for SLES [GH-1962]

diff --git plugins/guests/suse/cap/configure_networks.rb plugins/guests/suse/cap/configure_networks.rb
new file mode 100644
index 0000000..52cb453
--- /dev/null
+++ plugins/guests/suse/cap/configure_networks.rb
@@ -0,0 +1,60 @@
+require "set"
+require "tempfile"
+
+require "vagrant/util/retryable"
+require "vagrant/util/template_renderer"
+
+module VagrantPlugins
+  module GuestSuse
+    module Cap
+      class ConfigureNetworks
+        extend Vagrant::Util::Retryable
+        include Vagrant::Util
+
+        def self.configure_networks(machine, networks)
+          network_scripts_dir = machine.guest.capability("network_scripts_dir")
+
+          # Accumulate the configurations to add to the interfaces file as
+          # well as what interfaces we're actually configuring since we use that
+          # later.
+          interfaces = Set.new
+          networks.each do |network|
+            interfaces.add(network[:interface])
+
+            # Remove any previous vagrant configuration in this network interface's
+            # configuration files.
+            machine.communicate.sudo("touch #{network_scripts_dir}/ifcfg-eth#{network[:interface]}")
+            machine.communicate.sudo("sed -e '/^#VAGRANT-BEGIN/,/^#VAGRANT-END/ d' #{network_scripts_dir}/ifcfg-eth#{network[:interface]} > /tmp/vagrant-ifcfg-eth#{network[:interface]}")
+            machine.communicate.sudo("cat /tmp/vagrant-ifcfg-eth#{network[:interface]} > #{network_scripts_dir}/ifcfg-eth#{network[:interface]}")
+            machine.communicate.sudo("rm /tmp/vagrant-ifcfg-eth#{network[:interface]}")
+
+            # Render and upload the network entry file to a deterministic
+            # temporary location.
+            entry = TemplateRenderer.render("guests/suse/network_#{network[:type]}",
+                                            :options => network)
+
+            temp = Tempfile.new("vagrant")
+            temp.binmode
+            temp.write(entry)
+            temp.close
+
+            machine.communicate.upload(temp.path, "/tmp/vagrant-network-entry_#{network[:interface]}")
+          end
+
+          # Bring down all the interfaces we're reconfiguring. By bringing down
+          # each specifically, we avoid reconfiguring eth0 (the NAT interface) so
+          # SSH never dies.
+          interfaces.each do |interface|
+            retryable(:on => Vagrant::Errors::VagrantError, :tries => 3, :sleep => 2) do
+              machine.communicate.sudo("/sbin/ifdown eth#{interface} 2> /dev/null", :error_check => false)
+              machine.communicate.sudo("cat /tmp/vagrant-network-entry_#{interface} >> #{network_scripts_dir}/ifcfg-eth#{interface}")
+              machine.communicate.sudo("ARPCHECK=no /sbin/ifup eth#{interface} 2> /dev/null")
+            end
+
+            machine.communicate.sudo("rm /tmp/vagrant-network-entry_#{interface}")
+          end
+        end
+      end
+    end
+  end
+end
diff --git plugins/guests/suse/plugin.rb plugins/guests/suse/plugin.rb
index bf9fbfb..c5ffb0f 100644
--- plugins/guests/suse/plugin.rb
+++ plugins/guests/suse/plugin.rb
@@ -16,6 +16,11 @@ module VagrantPlugins
         Cap::ChangeHostName
       end
 
+      guest_capability("suse", "configure_networks") do
+        require_relative "cap/configure_networks"
+        Cap::ConfigureNetworks
+      end
+
       guest_capability("suse", "network_scripts_dir") do
         require_relative "cap/network_scripts_dir"
         Cap::NetworkScriptsDir
diff --git templates/guests/suse/network_dhcp.erb templates/guests/suse/network_dhcp.erb
new file mode 100644
index 0000000..8bbaa62
--- /dev/null
+++ templates/guests/suse/network_dhcp.erb
@@ -0,0 +1,6 @@
+#VAGRANT-BEGIN
+# The contents below are automatically generated by Vagrant. Do not modify.
+BOOTPROTO=dhcp
+ONBOOT=yes
+DEVICE=eth<%= options[:interface] %>
+#VAGRANT-END
diff --git templates/guests/suse/network_static.erb templates/guests/suse/network_static.erb
new file mode 100644
index 0000000..1e3baa5
--- /dev/null
+++ templates/guests/suse/network_static.erb
@@ -0,0 +1,8 @@
+#VAGRANT-BEGIN
+# The contents below are automatically generated by Vagrant. Do not modify.
+BOOTPROTO=static
+IPADDR=<%= options[:ip] %>
+NETMASK=<%= options[:netmask] %>
+DEVICE=eth<%= options[:interface] %>
+PEERDNS=no
+#VAGRANT-END
